{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photo = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [loadedImages, setLoadedImages] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const limit = 16; // 1ページあたりの表示件数\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          },\n          params: {\n            limit: limit,\n            offset: (currentPage - 1) * limit\n          }\n        });\n        setImages(response.data.contents);\n        setTotalPages(Math.ceil(response.data.totalCount / limit));\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, [currentPage]);\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n  const handleImageLoad = index => {\n    setLoadedImages(prevState => ({\n      ...prevState,\n      [index]: true\n    }));\n  };\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genreButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PHOTOGRAPH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [Object.keys(groupedImages).map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreClick(genre),\n          children: genre\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetClick,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: selectedGenre ? groupedImages[selectedGenre].map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`,\n          className: loadedImages[imgIndex] ? 'loaded' : '',\n          onLoad: () => handleImageLoad(imgIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)) : images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`,\n          className: loadedImages[imgIndex] ? 'loaded' : '',\n          onLoad: () => handleImageLoad(imgIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), totalPages > 1 &&\n    /*#__PURE__*/\n    // ページ数が1ページ以上の場合にのみ表示\n    _jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PaginationNav\",\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"PRev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PaginationNav\",\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Photo, \"YDsuva9K/LvMH5LNX1EQiV8cPKw=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useEffect","axios","Masonry","jsxDEV","_jsxDEV","Photo","_s","images","setImages","groupedImages","setGroupedImages","selectedGenre","setSelectedGenre","loadedImages","setLoadedImages","currentPage","setCurrentPage","totalPages","setTotalPages","limit","fetchImages","response","get","headers","params","offset","data","contents","Math","ceil","totalCount","error","console","length","grouped","reduce","acc","image","genre","forEach","push","handleGenreClick","handleResetClick","handleImageLoad","index","prevState","handlePageChange","page","breakpointColumnsObj","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","breakpointCols","columnClassName","imgIndex","src","photo","url","alt","onLoad","disabled","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\n\nconst Photo = () => {\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [loadedImages, setLoadedImages] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const limit = 16; // 1ページあたりの表示件数\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          },\n          params: {\n            limit: limit,\n            offset: (currentPage - 1) * limit,\n          }\n        });\n        setImages(response.data.contents);\n        setTotalPages(Math.ceil(response.data.totalCount / limit));\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n\n    fetchImages();\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n\n  const handleImageLoad = (index) => {\n    setLoadedImages(prevState => ({\n      ...prevState,\n      [index]: true,\n    }));\n  };\n\n  const handlePageChange = (page) => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n\n  return (\n    <div className=\"photoContainer\">\n      <div className=\"genreButtons\">\n        <p>PHOTOGRAPH</p>\n        <div className=\"right\">\n          {Object.keys(groupedImages).map((genre, index) => (\n            <button key={index} onClick={() => handleGenreClick(genre)}>\n              {genre}\n            </button>\n          ))}\n          <button onClick={handleResetClick}>All</button>\n        </div>\n      </div>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {selectedGenre\n          ? groupedImages[selectedGenre].map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img\n                  src={image.photo.url}\n                  alt={`Photo ${imgIndex + 1}`}\n                  className={loadedImages[imgIndex] ? 'loaded' : ''}\n                  onLoad={() => handleImageLoad(imgIndex)}\n                />\n              </div>\n            ))\n          : images.map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img\n                  src={image.photo.url}\n                  alt={`Photo ${imgIndex + 1}`}\n                  className={loadedImages[imgIndex] ? 'loaded' : ''}\n                  onLoad={() => handleImageLoad(imgIndex)}\n                />\n              </div>\n            ))}\n      </Masonry>\n      {totalPages > 1 && ( // ページ数が1ページ以上の場合にのみ表示\n        <div className=\"pagination\">\n          <button className='PaginationNav' onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\n            PRev\n          </button>\n          <button className='PaginationNav' onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\n            Next\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}