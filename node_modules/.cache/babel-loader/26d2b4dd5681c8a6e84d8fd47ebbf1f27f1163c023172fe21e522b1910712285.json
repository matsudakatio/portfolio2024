{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photo = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const limit = 10; // 1ページあたりの画像数\n  const observerRef = useRef();\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          },\n          params: {\n            offset: page * limit,\n            limit: limit\n          }\n        });\n        setImages(prevImages => [...prevImages, ...response.data.contents]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, [page]);\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        loadMoreImages();\n      }\n    }, {\n      threshold: 1\n    });\n    if (observerRef.current) {\n      observer.observe(observerRef.current);\n    }\n    return () => {\n      if (observerRef.current) {\n        observer.unobserve(observerRef.current);\n      }\n    };\n  }, []);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n  const loadMoreImages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genreButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PHOTOGRAPH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [Object.keys(groupedImages).map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreClick(genre),\n          children: genre\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetClick,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: selectedGenre ? groupedImages[selectedGenre].map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)) : images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: observerRef,\n      className: \"loadMoreContainer\",\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Photo, \"/lb1jmVhD9ziq1Z9lDN+7D1erj0=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Masonry","jsxDEV","_jsxDEV","Photo","_s","images","setImages","groupedImages","setGroupedImages","selectedGenre","setSelectedGenre","page","setPage","loading","setLoading","limit","observerRef","fetchImages","response","get","headers","params","offset","prevImages","data","contents","error","console","length","grouped","reduce","acc","image","genre","forEach","push","observer","IntersectionObserver","entries","isIntersecting","loadMoreImages","threshold","current","observe","unobserve","handleGenreClick","handleResetClick","prevPage","breakpointColumnsObj","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","breakpointCols","columnClassName","imgIndex","src","photo","url","alt","ref","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\n\nconst Photo = () => {\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const limit = 10; // 1ページあたりの画像数\n  const observerRef = useRef();\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          },\n          params: {\n            offset: page * limit,\n            limit: limit\n          }\n        });\n        setImages(prevImages => [...prevImages, ...response.data.contents]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [page]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          loadMoreImages();\n        }\n      },\n      { threshold: 1 }\n    );\n\n    if (observerRef.current) {\n      observer.observe(observerRef.current);\n    }\n\n    return () => {\n      if (observerRef.current) {\n        observer.unobserve(observerRef.current);\n      }\n    };\n  }, []);\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n\n  const loadMoreImages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n\n  return (\n    <div className=\"photoContainer\">\n      <div className=\"genreButtons\">\n        <p>PHOTOGRAPH</p>\n        <div className=\"right\">\n          {Object.keys(groupedImages).map((genre, index) => (\n            <button key={index} onClick={() => handleGenreClick(genre)}>\n              {genre}\n            </button>\n          ))}\n          <button onClick={handleResetClick}>All</button>\n        </div>\n      </div>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {selectedGenre\n          ? groupedImages[selectedGenre].map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))\n          : images.map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))}\n      </Masonry>\n      <div ref={observerRef} className=\"loadMoreContainer\">\n        {loading && <p>Loading...</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}