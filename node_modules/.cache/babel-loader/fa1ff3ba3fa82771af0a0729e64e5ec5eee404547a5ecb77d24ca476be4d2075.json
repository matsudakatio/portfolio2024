{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport './styles/slideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleText = text => {\n  let shuffled = text.split('');\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled.join('');\n};\nconst splitText = text => {\n  return text.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"char\",\n    children: char\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n};\nconst Slideshow = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [shuffledTitle, setShuffledTitle] = useState('');\n  const [shuffledHurigana, setShuffledHurigana] = useState('');\n  const [shuffledPlace, setShuffledPlace] = useState('');\n  const [shuffledDay, setShuffledDay] = useState('');\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n    fetchImages();\n    const interval = setInterval(() => {\n      setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n    }, 20000);\n    return () => clearInterval(interval);\n  }, [images.length]);\n  useEffect(() => {\n    if (images.length > 0) {\n      const originalTitle = images[currentIndex].title;\n      const originalHurigana = images[currentIndex].hurigana;\n      const originalPlace = images[currentIndex].place;\n      const originalDay = images[currentIndex].day;\n      const charsTitle = document.querySelectorAll('.title .char');\n      const charsHurigana = document.querySelectorAll('.hurigana .char');\n      const charsPlace = document.querySelectorAll('.place .char');\n      const charsDay = document.querySelectorAll('.day .char');\n      gsap.to(charsTitle, {\n        textContent: shuffleText(originalTitle),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsTitle, {\n            textContent: originalTitle,\n            duration: 0.5,\n            ease: 'none'\n          });\n        }\n      });\n      gsap.to(charsHurigana, {\n        textContent: shuffleText(originalHurigana),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsHurigana, {\n            textContent: originalHurigana,\n            duration: 0.5,\n            ease: 'none'\n          });\n        }\n      });\n      gsap.to(charsPlace, {\n        textContent: shuffleText(originalPlace),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsPlace, {\n            textContent: originalPlace,\n            duration: 0.5,\n            ease: 'none'\n          });\n        }\n      });\n      gsap.to(charsDay, {\n        textContent: shuffleText(originalDay),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsDay, {\n            textContent: originalDay,\n            duration: 0.5,\n            ease: 'none'\n          });\n        }\n      });\n    }\n  }, [currentIndex, images]);\n  if (images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentIndex].src.url,\n        alt: images[currentIndex].title,\n        className: \"imgArea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overviewArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: splitText(images[currentIndex].title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"hurigana\",\n          children: splitText(images[currentIndex].hurigana)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"place\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/map.png\",\n            alt: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: splitText(images[currentIndex].place)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"day\",\n          children: splitText(images[currentIndex].day)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"qOIecqIJoBtLojkqto6wiYm86Tk=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","axios","gsap","jsxDEV","_jsxDEV","shuffleText","text","shuffled","split","i","length","j","Math","floor","random","join","splitText","map","char","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Slideshow","_s","images","setImages","currentIndex","setCurrentIndex","shuffledTitle","setShuffledTitle","shuffledHurigana","setShuffledHurigana","shuffledPlace","setShuffledPlace","shuffledDay","setShuffledDay","fetchImages","response","get","headers","data","contents","error","console","interval","setInterval","prevIndex","clearInterval","originalTitle","title","originalHurigana","hurigana","originalPlace","place","originalDay","day","charsTitle","document","querySelectorAll","charsHurigana","charsPlace","charsDay","to","textContent","duration","ease","onComplete","src","url","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport './styles/slideshow.css';\n\nconst shuffleText = (text) => {\n  let shuffled = text.split('');\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled.join('');\n};\n\nconst splitText = (text) => {\n  return text.split('').map((char, index) => (\n    <span key={index} className=\"char\">\n      {char}\n    </span>\n  ));\n};\n\nconst Slideshow = () => {\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [shuffledTitle, setShuffledTitle] = useState('');\n  const [shuffledHurigana, setShuffledHurigana] = useState('');\n  const [shuffledPlace, setShuffledPlace] = useState('');\n  const [shuffledDay, setShuffledDay] = useState('');\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ',\n          },\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n\n    fetchImages();\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, 20000);\n\n    return () => clearInterval(interval);\n  }, [images.length]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const originalTitle = images[currentIndex].title;\n      const originalHurigana = images[currentIndex].hurigana;\n      const originalPlace = images[currentIndex].place;\n      const originalDay = images[currentIndex].day;\n\n      const charsTitle = document.querySelectorAll('.title .char');\n      const charsHurigana = document.querySelectorAll('.hurigana .char');\n      const charsPlace = document.querySelectorAll('.place .char');\n      const charsDay = document.querySelectorAll('.day .char');\n\n      gsap.to(charsTitle, {\n        textContent: shuffleText(originalTitle),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsTitle, {\n            textContent: originalTitle,\n            duration: 0.5,\n            ease: 'none',\n          });\n        },\n      });\n\n      gsap.to(charsHurigana, {\n        textContent: shuffleText(originalHurigana),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsHurigana, {\n            textContent: originalHurigana,\n            duration: 0.5,\n            ease: 'none',\n          });\n        },\n      });\n\n      gsap.to(charsPlace, {\n        textContent: shuffleText(originalPlace),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsPlace, {\n            textContent: originalPlace,\n            duration: 0.5,\n            ease: 'none',\n          });\n        },\n      });\n\n      gsap.to(charsDay, {\n        textContent: shuffleText(originalDay),\n        duration: 0.5,\n        ease: 'none',\n        onComplete: () => {\n          gsap.to(charsDay, {\n            textContent: originalDay,\n            duration: 0.5,\n            ease: 'none',\n          });\n        },\n      });\n    }\n  }, [currentIndex, images]);\n\n  if (images.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"imgContainer\">\n        <img\n          src={images[currentIndex].src.url}\n          alt={images[currentIndex].title}\n          className=\"imgArea\"\n        />\n      </div>\n      <div className=\"overviewArea\">\n        <div className=\"left\">\n          <h2 className=\"title\">\n            {splitText(images[currentIndex].title)}\n          </h2>\n          <h3 className=\"hurigana\">\n            {splitText(images[currentIndex].hurigana)}\n          </h3>\n        </div>\n        <div className=\"right\">\n          <div className=\"place\">\n            <img src=\"/img/map.png\" alt=\"map\" />\n            <h2>{splitText(images[currentIndex].place)}</h2>\n          </div>\n          <h2 className=\"day\">\n            {splitText(images[currentIndex].day)}\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}