{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photo = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const limit = 10; // 1ページあたりの画像数\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ',\n            params: {\n              offset: page * limit,\n              limit: limit\n            }\n          }\n        });\n        setImages(prevImages => [...prevImages, ...response.data.contents]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, [page]);\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n  const loadMoreImages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genreButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PHOTOGRAPH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [Object.keys(groupedImages).map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreClick(genre),\n          children: genre\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetClick,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: selectedGenre ? groupedImages[selectedGenre].map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)) : images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadMoreContainer\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadMoreImages,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Photo, \"Tj80Cdm7crwOCxL+fdV5Aw/R9e0=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useEffect","axios","Masonry","jsxDEV","_jsxDEV","Photo","_s","images","setImages","groupedImages","setGroupedImages","selectedGenre","setSelectedGenre","page","setPage","loading","setLoading","limit","fetchImages","response","get","headers","params","offset","prevImages","data","contents","error","console","length","grouped","reduce","acc","image","genre","forEach","push","handleGenreClick","handleResetClick","loadMoreImages","prevPage","breakpointColumnsObj","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","breakpointCols","columnClassName","imgIndex","src","photo","url","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\n\nconst Photo = () => {\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const limit = 10; // 1ページあたりの画像数\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ',\n            params: {\n              offset: page * limit,\n              limit: limit\n            }\n          }\n        });\n        setImages(prevImages => [...prevImages, ...response.data.contents]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [page]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n\n  const loadMoreImages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n\n  return (\n    <div className=\"photoContainer\">\n      <div className=\"genreButtons\">\n        <p>PHOTOGRAPH</p>\n        <div className=\"right\">\n          {Object.keys(groupedImages).map((genre, index) => (\n            <button key={index} onClick={() => handleGenreClick(genre)}>\n              {genre}\n            </button>\n          ))}\n          <button onClick={handleResetClick}>All</button>\n        </div>\n      </div>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {selectedGenre\n          ? groupedImages[selectedGenre].map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))\n          : images.map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))}\n      </Masonry>\n      <div className=\"loadMoreContainer\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <button onClick={loadMoreImages}>Load More</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}