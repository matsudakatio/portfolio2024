{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles/slideshow.css';\nimport codeText from './codeText'; // インポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [visibleLines, setVisibleLines] = useState([]);\n  const [textComplete, setTextComplete] = useState(false);\n  const [showImage, setShowImage] = useState(false);\n  useEffect(() => {\n    // MicroCMSからデータを取得する関数\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    const lines = codeText.split('\\n');\n    let currentLine = 0;\n    const interval = setInterval(() => {\n      setVisibleLines(prevLines => [...prevLines, lines[currentLine]]);\n      currentLine += 1;\n      if (currentLine >= lines.length) {\n        clearInterval(interval);\n        setTextComplete(true);\n      }\n    }, 100); // 行を表示する間隔\n\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (textComplete && images.length > 0) {\n      setShowImage(true);\n      const interval = setInterval(() => {\n        setShowImage(false);\n        setTimeout(() => {\n          setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n          setShowImage(true);\n        }, 500); // アニメーション開始までの遅延\n      }, 20000); // 20秒ごとに切り替え\n\n      return () => clearInterval(interval);\n    }\n  }, [textComplete, images.length]);\n  if (images.length === 0) {\n    return;\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgContainer\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"codeText\",\n        children: visibleLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"line\",\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), textComplete && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentIndex].src.url,\n        alt: images[currentIndex].title,\n        className: `imgArea ${showImage ? 'show' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heroArea\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"DIRECTOR__\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"PHOTOGRAPHER__\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"CODER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"copyright\",\n      children: \"Copyright \\xA9 Kaito Matsuda All Rights Reserved.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"rTB5fPuVURM8lHxo+q/9qX1KdXg=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","axios","codeText","jsxDEV","_jsxDEV","Slideshow","_s","images","setImages","currentIndex","setCurrentIndex","visibleLines","setVisibleLines","textComplete","setTextComplete","showImage","setShowImage","fetchImages","response","get","headers","data","contents","error","console","lines","split","currentLine","interval","setInterval","prevLines","length","clearInterval","setTimeout","prevIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","src","url","alt","title","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles/slideshow.css';\nimport codeText from './codeText'; // インポート\n\nconst Slideshow = () => {\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [visibleLines, setVisibleLines] = useState([]);\n  const [textComplete, setTextComplete] = useState(false);\n  const [showImage, setShowImage] = useState(false);\n\n  useEffect(() => {\n    // MicroCMSからデータを取得する関数\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n\n    fetchImages();\n  }, []);\n\n  useEffect(() => {\n    const lines = codeText.split('\\n');\n    let currentLine = 0;\n\n    const interval = setInterval(() => {\n      setVisibleLines(prevLines => [...prevLines, lines[currentLine]]);\n      currentLine += 1;\n\n      if (currentLine >= lines.length) {\n        clearInterval(interval);\n        setTextComplete(true);\n      }\n    }, 100); // 行を表示する間隔\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (textComplete && images.length > 0) {\n      setShowImage(true);\n      const interval = setInterval(() => {\n        setShowImage(false);\n        setTimeout(() => {\n          setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n          setShowImage(true);\n        }, 500); // アニメーション開始までの遅延\n      }, 20000); // 20秒ごとに切り替え\n\n      return () => clearInterval(interval);\n    }\n  }, [textComplete, images.length]);\n\n  if (images.length === 0) {\n    return\n    <div>\n      <div className=\"imgContainer\">\n      Loading...\n      </div>\n\n    </div>;\n  }\n\n  return (\n    <div>\n      <div className=\"imgContainer\">\n        <div className=\"codeText\">\n          {visibleLines.map((line, index) => (\n            <h3 key={index} className=\"line\">\n              {line}\n            </h3>\n          ))}\n\n        </div>\n        {textComplete && (\n          <img\n            src={images[currentIndex].src.url}\n            alt={images[currentIndex].title}\n            className={`imgArea ${showImage ? 'show' : ''}`}\n          />\n        )}\n\n      <div className=\"heroArea\">\n          <div className=\"first\">\n            <h1 >DIRECTOR__</h1 >\n            <h1 >PHOTOGRAPHER__</h1 >\n            <h1 >CODER</h1 >\n          </div>\n        </div>\n      </div>\n\n\n      <p className=\"copyright\">Copyright © Kaito Matsuda All Rights Reserved.</p>\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}