{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photo = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: Object.keys(groupedImages).map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid_column\",\n        children: groupedImages[genre].map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.photo.url,\n            alt: `Photo ${imgIndex + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, imgIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Photo, \"1s/iTbUTIfvpVijsKR/JV5JIBeU=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useEffect","axios","Masonry","jsxDEV","_jsxDEV","Photo","_s","images","setImages","groupedImages","setGroupedImages","fetchImages","response","get","headers","data","contents","error","console","length","grouped","reduce","acc","image","genre","forEach","push","breakpointColumnsObj","default","className","children","Object","keys","map","index","fileName","_jsxFileName","lineNumber","columnNumber","breakpointCols","columnClassName","imgIndex","src","photo","url","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\n\nconst Photo = () => {\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n\n    fetchImages();\n  }, []);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n\n  return (\n    <div className=\"photoContainer\">\n      {Object.keys(groupedImages).map((genre, index) => (\n        <div key={index}>\n          <h2>{genre}</h2>\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {groupedImages[genre].map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))}\n          </Masonry>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Photo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}