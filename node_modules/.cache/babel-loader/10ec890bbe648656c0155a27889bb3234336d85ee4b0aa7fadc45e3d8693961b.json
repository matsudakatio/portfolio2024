{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/works.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/works.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Works = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [compressedImages, setCompressedImages] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        const imageUrls = response.data.contents.map(content => content.photo.url);\n        setImages(imageUrls);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    const compressImages = async () => {\n      const compressed = await Promise.all(images.map(async url => {\n        const img = await loadImage(url);\n        return compressImage(img, 0.5); // 画質を50%に圧縮\n      }));\n      setCompressedImages(compressed);\n    };\n    if (images.length > 0) {\n      compressImages();\n    }\n  }, [images]);\n  const loadImage = src => {\n    return new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.src = src;\n    });\n  };\n  const compressImage = (img, quality) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        resolve(URL.createObjectURL(blob));\n      }, 'image/jpeg', quality);\n    });\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"works-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: compressedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Work ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Works, \"f0q1C2xkzY2LkEkGyO9aUPuuLdc=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useState","useEffect","axios","Masonry","jsxDEV","_jsxDEV","Works","_s","images","setImages","compressedImages","setCompressedImages","fetchImages","response","get","headers","imageUrls","data","contents","map","content","photo","url","error","console","compressImages","compressed","Promise","all","img","loadImage","compressImage","length","src","resolve","Image","onload","quality","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","blob","URL","createObjectURL","breakpointColumnsObj","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","breakpointCols","columnClassName","image","index","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/works.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/works.css';\n\nconst Works = () => {\n  const [images, setImages] = useState([]);\n  const [compressedImages, setCompressedImages] = useState([]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        const imageUrls = response.data.contents.map(content => content.photo.url);\n        setImages(imageUrls);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n\n    fetchImages();\n  }, []);\n\n  useEffect(() => {\n    const compressImages = async () => {\n      const compressed = await Promise.all(images.map(async (url) => {\n        const img = await loadImage(url);\n        return compressImage(img, 0.5); // 画質を50%に圧縮\n      }));\n      setCompressedImages(compressed);\n    };\n\n    if (images.length > 0) {\n      compressImages();\n    }\n  }, [images]);\n\n  const loadImage = (src) => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.src = src;\n    });\n  };\n\n  const compressImage = (img, quality) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n    return new Promise((resolve) => {\n      canvas.toBlob((blob) => {\n        resolve(URL.createObjectURL(blob));\n      }, 'image/jpeg', quality);\n    });\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n\n  return (\n    <div className=\"works-container\">\n      <h1>Works</h1>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {compressedImages.map((image, index) => (\n          <div key={index} className=\"gallery-item\">\n            <img src={image} alt={`Work ${index}`} />\n          </div>\n        ))}\n      </Masonry>\n    </div>\n  );\n};\n\nexport default Works;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}