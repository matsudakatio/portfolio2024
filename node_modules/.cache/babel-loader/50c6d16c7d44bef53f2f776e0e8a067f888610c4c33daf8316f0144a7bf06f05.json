{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/movie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/movie.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/movie', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setMovies(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieArea\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: movie.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\">>\", movie.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageGallery\",\n            children: movie.image.map((img, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url,\n              alt: `Image ${imgIndex + 1}`\n            }, imgIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Movie","_s","movies","setMovies","fetchMovies","response","get","headers","data","contents","error","console","children","className","map","movie","index","href","url","target","rel","title","fileName","_jsxFileName","lineNumber","columnNumber","image","img","imgIndex","src","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/movie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/movie.css';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/movie', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setMovies(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"movieArea\">\n        {movies.map((movie, index) => (\n\n            <a href={movie.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <div key={index} className=\"movieItem\">\n                    <h2>>>{movie.title}</h2>\n                    <div className=\"imageGallery\">\n                        {movie.image.map((img, imgIndex) => (\n                            <img key={imgIndex} src={img.url} alt={`Image ${imgIndex + 1}`} />\n                        ))}\n                    </div>\n                </div>\n            </a>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iDAAiD,EAAE;UAClFC,OAAO,EAAE;YACP,WAAW,EAAE;UACf;QACF,CAAC,CAAC;QACFJ,SAAS,CAACE,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAD,QAAA,EACvBV,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAErBjB,OAAA;QAAGkB,IAAI,EAAEF,KAAK,CAACG,GAAI;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAR,QAAA,eACzDb,OAAA;UAAiBc,SAAS,EAAC,WAAW;UAAAD,QAAA,gBAClCb,OAAA;YAAAa,QAAA,GAAI,IAAE,EAACG,KAAK,CAACM,KAAK;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB1B,OAAA;YAAKc,SAAS,EAAC,cAAc;YAAAD,QAAA,EACxBG,KAAK,CAACW,KAAK,CAACZ,GAAG,CAAC,CAACa,GAAG,EAAEC,QAAQ,kBAC3B7B,OAAA;cAAoB8B,GAAG,EAAEF,GAAG,CAACT,GAAI;cAACY,GAAG,EAAE,SAASF,QAAQ,GAAG,CAAC;YAAG,GAArDA,QAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+C,CACpE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA,GANAT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvCID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}