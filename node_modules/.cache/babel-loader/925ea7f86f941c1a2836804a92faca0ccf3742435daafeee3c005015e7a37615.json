{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport './styles/slideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleText = text => {\n  let shuffled = text.split('');\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled.join('');\n};\nconst Slideshow = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [show, setShow] = useState(true);\n  const [shuffledTitle, setShuffledTitle] = useState('');\n  const [shuffledHurigana, setShuffledHurigana] = useState('');\n  const [shuffledPlace, setShuffledPlace] = useState('');\n  const [shuffledDay, setShuffledDay] = useState('');\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n    fetchImages();\n    const interval = setInterval(() => {\n      setShow(false);\n      setTimeout(() => {\n        setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n        setShow(true);\n      }, 1000);\n    }, 20000);\n    return () => clearInterval(interval);\n  }, [images.length]);\n  useEffect(() => {\n    if (images.length > 0) {\n      setShuffledTitle(shuffleText(images[currentIndex].title));\n      setShuffledHurigana(shuffleText(images[currentIndex].hurigana));\n      setShuffledPlace(shuffleText(images[currentIndex].place));\n      setShuffledDay(shuffleText(images[currentIndex].day));\n      const timeoutId = setTimeout(() => {\n        setShuffledTitle(images[currentIndex].title);\n        setShuffledHurigana(images[currentIndex].hurigana);\n        setShuffledPlace(images[currentIndex].place);\n        setShuffledDay(images[currentIndex].day);\n      }, 1000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [currentIndex, images]);\n  if (images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentIndex].src.url,\n        alt: images[currentIndex].title,\n        className: `imgArea ${show ? 'show' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overviewArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `title ${show ? 'show' : ''}`,\n          children: shuffledTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `hurigana ${show ? 'show' : ''}`,\n          children: shuffledHurigana\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `place ${show ? 'show' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/map.png\",\n            alt: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: shuffledPlace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `day ${show ? 'show' : ''}`,\n          children: shuffledDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"zZdDDfsr8kvbXTbKNXVuBBVwnVU=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","gsap","ScrollTrigger","jsxDEV","_jsxDEV","shuffleText","text","shuffled","split","i","length","j","Math","floor","random","join","Slideshow","_s","images","setImages","currentIndex","setCurrentIndex","show","setShow","shuffledTitle","setShuffledTitle","shuffledHurigana","setShuffledHurigana","shuffledPlace","setShuffledPlace","shuffledDay","setShuffledDay","fetchImages","response","get","headers","data","contents","error","console","interval","setInterval","setTimeout","prevIndex","clearInterval","title","hurigana","place","day","timeoutId","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","url","alt","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/Slideshow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport './styles/slideshow.css';\n\nconst shuffleText = (text) => {\n  let shuffled = text.split('');\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled.join('');\n};\n\nconst Slideshow = () => {\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [show, setShow] = useState(true);\n  const [shuffledTitle, setShuffledTitle] = useState('');\n  const [shuffledHurigana, setShuffledHurigana] = useState('');\n  const [shuffledPlace, setShuffledPlace] = useState('');\n  const [shuffledDay, setShuffledDay] = useState('');\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/portfolio', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ'\n          }\n        });\n        setImages(response.data.contents);\n      } catch (error) {\n        console.error('Error fetching data from MicroCMS:', error);\n      }\n    };\n\n    fetchImages();\n\n    const interval = setInterval(() => {\n      setShow(false);\n      setTimeout(() => {\n        setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n        setShow(true);\n      }, 1000);\n    }, 20000);\n\n    return () => clearInterval(interval);\n  }, [images.length]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      setShuffledTitle(shuffleText(images[currentIndex].title));\n      setShuffledHurigana(shuffleText(images[currentIndex].hurigana));\n      setShuffledPlace(shuffleText(images[currentIndex].place));\n      setShuffledDay(shuffleText(images[currentIndex].day));\n\n      const timeoutId = setTimeout(() => {\n        setShuffledTitle(images[currentIndex].title);\n        setShuffledHurigana(images[currentIndex].hurigana);\n        setShuffledPlace(images[currentIndex].place);\n        setShuffledDay(images[currentIndex].day);\n      }, 1000);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [currentIndex, images]);\n\n  if (images.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"imgContainer\">\n        <img\n          src={images[currentIndex].src.url}\n          alt={images[currentIndex].title}\n          className={`imgArea ${show ? 'show' : ''}`}\n        />\n      </div>\n      <div className=\"overviewArea\">\n        <div className=\"left\">\n          <h2 className={`title ${show ? 'show' : ''}`}>\n            {shuffledTitle}\n          </h2>\n          <h3 className={`hurigana ${show ? 'show' : ''}`}>\n            {shuffledHurigana}\n          </h3>\n        </div>\n        <div className=\"right\">\n          <div className={`place ${show ? 'show' : ''}`}>\n            <img src='/img/map.png' alt=\"map\"/>\n            <h2>{shuffledPlace}</h2>\n          </div>\n          <h2 className={`day ${show ? 'show' : ''}`}>{shuffledDay}</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAIC,IAAI,IAAK;EAC5B,IAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC;EAC7B,KAAK,IAAIC,CAAC,GAAGF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACF,QAAQ,CAACE,CAAC,CAAC,EAAEF,QAAQ,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,QAAQ,CAACI,CAAC,CAAC,EAAEJ,QAAQ,CAACE,CAAC,CAAC,CAAC;EACzD;EACA,OAAOF,QAAQ,CAACQ,IAAI,CAAC,EAAE,CAAC;AAC1B,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAElDE,SAAS,CAAC,MAAM;IACd,MAAMiC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,qDAAqD,EAAE;UACtFC,OAAO,EAAE;YACP,WAAW,EAAE;UACf;QACF,CAAC,CAAC;QACFhB,SAAS,CAACc,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;IAEb,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjClB,OAAO,CAAC,KAAK,CAAC;MACdmB,UAAU,CAAC,MAAM;QACfrB,eAAe,CAACsB,SAAS,IAAI,CAACA,SAAS,GAAG,CAAC,IAAIzB,MAAM,CAACR,MAAM,CAAC;QAC7Da,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMqB,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACtB,MAAM,CAACR,MAAM,CAAC,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACd,IAAImB,MAAM,CAACR,MAAM,GAAG,CAAC,EAAE;MACrBe,gBAAgB,CAACpB,WAAW,CAACa,MAAM,CAACE,YAAY,CAAC,CAACyB,KAAK,CAAC,CAAC;MACzDlB,mBAAmB,CAACtB,WAAW,CAACa,MAAM,CAACE,YAAY,CAAC,CAAC0B,QAAQ,CAAC,CAAC;MAC/DjB,gBAAgB,CAACxB,WAAW,CAACa,MAAM,CAACE,YAAY,CAAC,CAAC2B,KAAK,CAAC,CAAC;MACzDhB,cAAc,CAAC1B,WAAW,CAACa,MAAM,CAACE,YAAY,CAAC,CAAC4B,GAAG,CAAC,CAAC;MAErD,MAAMC,SAAS,GAAGP,UAAU,CAAC,MAAM;QACjCjB,gBAAgB,CAACP,MAAM,CAACE,YAAY,CAAC,CAACyB,KAAK,CAAC;QAC5ClB,mBAAmB,CAACT,MAAM,CAACE,YAAY,CAAC,CAAC0B,QAAQ,CAAC;QAClDjB,gBAAgB,CAACX,MAAM,CAACE,YAAY,CAAC,CAAC2B,KAAK,CAAC;QAC5ChB,cAAc,CAACb,MAAM,CAACE,YAAY,CAAC,CAAC4B,GAAG,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAME,YAAY,CAACD,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAAC7B,YAAY,EAAEF,MAAM,CAAC,CAAC;EAE1B,IAAIA,MAAM,CAACR,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAON,OAAA;MAAA+C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEnD,OAAA;IAAA+C,QAAA,gBACE/C,OAAA;MAAKoD,SAAS,EAAC,cAAc;MAAAL,QAAA,eAC3B/C,OAAA;QACEqD,GAAG,EAAEvC,MAAM,CAACE,YAAY,CAAC,CAACqC,GAAG,CAACC,GAAI;QAClCC,GAAG,EAAEzC,MAAM,CAACE,YAAY,CAAC,CAACyB,KAAM;QAChCW,SAAS,EAAE,WAAWlC,IAAI,GAAG,MAAM,GAAG,EAAE;MAAG;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnD,OAAA;MAAKoD,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC3B/C,OAAA;QAAKoD,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnB/C,OAAA;UAAIoD,SAAS,EAAE,SAASlC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;UAAA6B,QAAA,EAC1C3B;QAAa;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACLnD,OAAA;UAAIoD,SAAS,EAAE,YAAYlC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;UAAA6B,QAAA,EAC7CzB;QAAgB;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNnD,OAAA;QAAKoD,SAAS,EAAC,OAAO;QAAAL,QAAA,gBACpB/C,OAAA;UAAKoD,SAAS,EAAE,SAASlC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;UAAA6B,QAAA,gBAC5C/C,OAAA;YAAKqD,GAAG,EAAC,cAAc;YAACE,GAAG,EAAC;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACnCnD,OAAA;YAAA+C,QAAA,EAAKvB;UAAa;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACNnD,OAAA;UAAIoD,SAAS,EAAE,OAAOlC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;UAAA6B,QAAA,EAAErB;QAAW;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAtFID,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAwFf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}