{"ast":null,"code":"var _jsxFileName = \"/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photo = () => {\n  _s();\n  var _groupedImages$select;\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const itemsPerPage = 20;\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ',\n            params: {\n              offset: (currentPage - 1) * itemsPerPage,\n              limit: itemsPerPage\n            }\n          }\n        });\n        setImages(response.data.contents);\n        setTotalPages(Math.ceil(response.data.totalCount / itemsPerPage));\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, [currentPage]);\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genreButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PHOTOGRAPH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [Object.keys(groupedImages).map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenreClick(genre),\n          children: genre\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetClick,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: selectedGenre ? (_groupedImages$select = groupedImages[selectedGenre]) === null || _groupedImages$select === void 0 ? void 0 : _groupedImages$select.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)) : images.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.photo.url,\n          alt: `Photo ${imgIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: page === currentPage ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Photo, \"MO/q3k//4ZLiden6/AsMJpa4KWU=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useEffect","axios","Masonry","jsxDEV","_jsxDEV","Photo","_s","_groupedImages$select","images","setImages","groupedImages","setGroupedImages","selectedGenre","setSelectedGenre","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","fetchImages","response","get","headers","params","offset","limit","data","contents","Math","ceil","totalCount","error","console","length","grouped","reduce","acc","image","genre","forEach","push","handleGenreClick","handleResetClick","handlePageChange","page","breakpointColumnsObj","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","onClick","breakpointCols","columnClassName","imgIndex","src","photo","url","alt","Array","from","_","i","_c","$RefreshReg$"],"sources":["/Users/matsudakaito/Desktop/myportfolio/portfolio2024/src/pages/photo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-css';\nimport '../styles/photo.css';\n\nconst Photo = () => {\n  const [images, setImages] = useState([]);\n  const [groupedImages, setGroupedImages] = useState({});\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const itemsPerPage = 20;\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('https://kaitoportfolio.microcms.io/api/v1/photolibrary', {\n          headers: {\n            'X-API-KEY': 'D47K5TpPZfRzZCyXPPs2YxML9X5uOJyWAQdZ',\n            params: {\n              offset: (currentPage - 1) * itemsPerPage,\n              limit: itemsPerPage\n            }\n          }\n        });\n        setImages(response.data.contents);\n        setTotalPages(Math.ceil(response.data.totalCount / itemsPerPage));\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n\n    fetchImages();\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (images.length > 0) {\n      const grouped = images.reduce((acc, image) => {\n        image.genre.forEach(genre => {\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(image);\n        });\n        return acc;\n      }, {});\n      setGroupedImages(grouped);\n    }\n  }, [images]);\n\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handleResetClick = () => {\n    setSelectedGenre(null);\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 2\n  };\n\n  return (\n    <div className=\"photoContainer\">\n      <div className=\"genreButtons\">\n        <p>PHOTOGRAPH</p>\n        <div className=\"right\">\n          {Object.keys(groupedImages).map((genre, index) => (\n            <button key={index} onClick={() => handleGenreClick(genre)}>\n              {genre}\n            </button>\n          ))}\n          <button onClick={handleResetClick}>All</button>\n        </div>\n      </div>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {selectedGenre\n          ? groupedImages[selectedGenre]?.map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))\n          : images.map((image, imgIndex) => (\n              <div key={imgIndex} className=\"gallery-item\">\n                <img src={image.photo.url} alt={`Photo ${imgIndex + 1}`} />\n              </div>\n            ))}\n      </Masonry>\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={page === currentPage ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Photo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}